# -*- coding: utf-8 -*-
"""VGG16.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V2z-OMuL8greszcunAlFhb65XrEtimgX
"""

from keras.models import Sequential
from keras.layers import Conv1D, MaxPool1D, Flatten, Dense

def vgg16_model (input_shape, n_classes):
  model = Sequential()
  model.add(Conv1D(64, input_shape=input_shape,kernel_size=3,padding="same", activation="relu"))
  model.add(Conv1D(64,kernel_size=3,padding="same", activation="relu"))
  model.add(MaxPool1D(pool_size=2, strides=2))

  model.add(Conv1D(128, kernel_size=3, padding="same", activation="relu"))
  model.add(Conv1D(128, kernel_size=3, padding="same", activation="relu"))
  model.add(MaxPool1D(pool_size=2, strides=2))

  model.add(Conv1D(256, kernel_size=3, padding="same", activation="relu"))
  model.add(Conv1D(256, kernel_size=3, padding="same", activation="relu"))
  model.add(Conv1D(256, kernel_size=3, padding="same", activation="relu"))
  model.add(MaxPool1D(pool_size=2, strides=2))

  model.add(Conv1D(512, kernel_size=3, padding="same", activation="relu"))
  model.add(Conv1D(512, kernel_size=3, padding="same", activation="relu"))
  model.add(Conv1D(512, kernel_size=3, padding="same", activation="relu"))
  model.add(MaxPool1D(pool_size=2, strides=2))

  model.add(Conv1D(512, kernel_size=3, padding="valid", activation="relu"))
  model.add(Conv1D(512, kernel_size=3, padding="same", activation="relu"))
  model.add(Conv1D(512, kernel_size=3, padding="same", activation="relu"))
  model.add(MaxPool1D(pool_size=2, strides=2))
  model.add(Flatten())

  model.add(Dense(units=4096,activation="relu"))
  model.add(Dense(units=4096,activation="relu"))
  model.add(Dense(units=n_classes, activation="softmax"))

  return model

if __name__ == '__main__':
  model = vgg16_model(input_shape=(187,1), n_classes=5)

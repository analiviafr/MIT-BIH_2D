# -*- coding: utf-8 -*-
"""proposed_model1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/119CAy0VS_UAU3dGH1s3SPhOUXcyZEg4g
"""

from keras.layers import Dense, Dropout, Conv1D, Input, MaxPool1D, Flatten
from keras.models import Model, Sequential
from keras.layers.normalization import BatchNormalization

def proposed_model(input_shape, n_classes):
    model = Sequential()

    model.add(Conv1D(64, kernel_size=3, strides=1, input_shape=input_shape, activation='relu', padding='same'))
    model.add(MaxPool1D(pool_size=2, strides=2, padding='same'))
    model.add(Conv1D(64, kernel_size=3, strides=1, activation='relu', padding='same'))
    model.add(MaxPool1D(pool_size=2, strides=2, padding='same'))

    model.add(Conv1D(128, kernel_size=3, strides=1, activation='relu', padding='same'))
    model.add(MaxPool1D(pool_size=2, strides=2, padding='same'))
    model.add(Conv1D(128, kernel_size=3, strides=1, activation='relu', padding='same'))
    model.add(MaxPool1D(pool_size=2, strides=2, padding='same'))

    model.add(Conv1D(256, kernel_size=3, strides=1, activation='relu', padding='same'))
    model.add(MaxPool1D(pool_size=2, strides=2, padding='same'))
    model.add(Conv1D(256, kernel_size=3, strides=1, activation='relu', padding='same'))
    model.add(MaxPool1D(pool_size=2, strides=2, padding='same'))

    model.add(Flatten())

    model.add(Dense(3096, activation='relu'))
    model.add(BatchNormalization())
    model.add(Dropout(0.5))

    model.add(Dense(3096, activation='relu'))
    model.add(BatchNormalization())
    model.add(Dropout(0.5))

    model.add(Dense(3096, activation='relu'))
    model.add(BatchNormalization())
    model.add(Dropout(0.5))

    model.add(Dense(n_classes, activation='softmax'))

    return model

if __name__ == '__main__':
    cnn_model=proposed_model(input_shape=(187,1), n_classes=5)
    cnn_model.summary()